/*
demon for ordering profile by weight
*/

CREATE TABLE PROFILE(
   ID INT PRIMARY KEY     NOT NULL,
   AGE INT
);

INSERT INTO PROFILE VALUES (1, 56);
INSERT INTO PROFILE VALUES (2, 56);
INSERT INTO PROFILE VALUES (3, 56);
INSERT INTO PROFILE VALUES (4, 56);

SELECT * FROM PROFILE;


CREATE TABLE KEYWORDS(
   ID INT PRIMARY KEY     NOT NULL,
   KEYS TEXT
);

INSERT INTO KEYWORDS VALUES(1, 'QWE');
INSERT INTO KEYWORDS VALUES(2, 'ASD');
INSERT INTO KEYWORDS VALUES(3, 'ZXC');


SELECT * FROM KEYWORDS;

CREATE TABLE ass(
   KEY_ID INT,
   P_ID INT,
   WEIGHT INT
);

INSERT INTO ass VALUES(1, 1, 10);
INSERT INTO ass VALUES(2, 1, 20);
INSERT INTO ass VALUES(2, 2, 30);
INSERT INTO ass VALUES(3, 2, 40);
INSERT INTO ass VALUES(1, 3, 50);

select * from ass;

select profile.*, sum(weight) as weight_sum from (select p_id, weight from (select ID from KEYWORDS where KEYS in ('ASD', 'ZXC', 'BNM')) as new_keys inner join ass on new_keys.ID = ass.KEY_ID) as new_ass inner join profile on new_ass.p_id = profile.id group by profile.id order by weight_sum desc;

// SQLAlchemy
// get id from keywords table
/*
keyword_id = select([Keyword.id]).where(Keyword.id.in_(<keyword_list>)).alias()
*/
// join with keyword association
/*
ass_pid_weight = select([ProfileKeywordAssociation.left_id, ProfileKeywordAssociation.weight]).select_from(ProfileKeywordAssociation_id.join(keyword_id, ProfileKeywordAssociation.right_id == keyword_id.id)).alias()
*/
// sum
/*
list = session.query(Profile, func.sum(ass_pid_weight).label('total_weight')).join(ass_pid_weight, ass_pid_weight.left_id == Profile.id).group_by(Profile.id).order_by(func.sum(ass_pid_weight).desc()).all()
*/
